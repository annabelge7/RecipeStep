{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/Update.js\",\n  _s = $RefreshSig$();\nimport Button from \"./Button\";\nimport React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $step: String!, $completed: Boolean!) {\n    updateRecipeStep(data: { id: $id, step: $step, completed: $completed }) {\n      id\n      step\n      completed\n    }\n  }\n`;\nexport default function Update({\n  id,\n  startStep\n}) {\n  _s();\n  const [step, setStep] = useState(startStep);\n  const [updateRecipeStep, {\n    loading,\n    error\n  }] = useMutation(UPDATE_RECIPE_STEP, {\n    variables: {\n      id\n    }\n  });\n  const handleUpdate = () => {\n    updateRecipeStep({\n      variables: {\n        id,\n        step\n      },\n      //copied this directly from apollo docs\n      optimisticResponse: {\n        updateStep: {\n          id: id,\n          step: step,\n          __typename: \"RecipeStep\"\n        }\n      }\n    });\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  if (loading) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: step,\n      onChange: e => setStep(e.target.value),\n      placeholder: \"Edit Step\",\n      className: \"p-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Update Step\",\n      color: \"lightgreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"mXypDET5cmLaxdWPAB58TUZ8xLU=\", false, function () {\n  return [useMutation];\n});\n_c = Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["Button","React","useState","RecipeStep","useMutation","gql","jsxDEV","_jsxDEV","UPDATE_RECIPE_STEP","Update","id","startStep","_s","step","setStep","updateRecipeStep","loading","error","variables","handleUpdate","optimisticResponse","updateStep","__typename","children","message","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","className","text","color","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/Update.js"],"sourcesContent":["import Button from \"./Button\";\nimport React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $step: String!, $completed: Boolean!) {\n    updateRecipeStep(data: { id: $id, step: $step, completed: $completed }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nexport default function Update({ id, startStep }) {\n  const [step, setStep] = useState(startStep);\n  const [updateRecipeStep, { loading, error }] = useMutation(\n    UPDATE_RECIPE_STEP,\n    {\n      variables: { id },\n    }\n  );\n\n  const handleUpdate = () => {\n    updateRecipeStep({\n      variables: { id, step },\n      //copied this directly from apollo docs\n      optimisticResponse: {\n        updateStep: {\n          id: id,\n          step: step,\n          __typename: \"RecipeStep\",\n        },\n      },\n    });\n  };\n  if (error) return <p>error: {error.message}</p>;\n  if (loading) return \"Loading...\";\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={step}\n        onChange={(e) => setStep(e.target.value)}\n        placeholder=\"Edit Step\"\n        className=\"p-2\"\n      />{\" \"}\n      <Button text={\"Update Step\"} color={\"lightgreen\"} />{\" \"}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASI,MAAMA,CAAC;EAAEC,EAAE;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACS,SAAS,CAAC;EAC3C,MAAM,CAACI,gBAAgB,EAAE;IAAEC,OAAO;IAAEC;EAAM,CAAC,CAAC,GAAGb,WAAW,CACxDI,kBAAkB,EAClB;IACEU,SAAS,EAAE;MAAER;IAAG;EAClB,CACF,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBJ,gBAAgB,CAAC;MACfG,SAAS,EAAE;QAAER,EAAE;QAAEG;MAAK,CAAC;MACvB;MACAO,kBAAkB,EAAE;QAClBC,UAAU,EAAE;UACVX,EAAE,EAAEA,EAAE;UACNG,IAAI,EAAEA,IAAI;UACVS,UAAU,EAAE;QACd;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EACD,IAAIL,KAAK,EAAE,oBAAOV,OAAA;IAAAgB,QAAA,GAAG,SAAO,EAACN,KAAK,CAACO,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,IAAIZ,OAAO,EAAE,OAAO,YAAY;EAChC,oBACET,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC,WAAW;MACvBC,SAAS,EAAC;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EAAC,GAAG,eACNrB,OAAA,CAACP,MAAM;MAACoC,IAAI,EAAE,aAAc;MAACC,KAAK,EAAE;IAAa;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAAChB,EAAA,CApCuBH,MAAM;EAAA,QAEmBL,WAAW;AAAA;AAAAkC,EAAA,GAFpC7B,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
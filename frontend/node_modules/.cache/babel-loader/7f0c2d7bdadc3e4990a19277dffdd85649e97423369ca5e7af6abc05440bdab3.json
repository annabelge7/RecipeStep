{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useApolloClient, gql, useQuery } from \"@apollo/client\";\nimport RecipeStep from \"./RecipeStep\";\nimport Delete from \"./Delete\";\nimport Update from \"./Update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_RECIPE_STEPS = gql`\n  query AllRecipeSteps {\n    recipeSteps {\n      id\n      step\n      completed\n    }\n  }\n`;\nfunction RecipeStepList() {\n  _s();\n  //copied this directly from Apollo docs\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RECIPE_STEPS); //muchhh easier way to query with apollo client wow\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n  //this was another way to query i tried which just required a bit more code but did the saem thing as above\n  //   const client = useApolloClient();\n  //   const [data, setData] = useState(null);\n  //   const [error, setError] = useState(null);\n\n  //   useEffect(() => {\n  //     client\n  //       .query({\n  //         query: GET_RECIPE_STEPS,\n  //       })\n  //       .then((response) => {\n  //         setData(response.data);\n  //       })\n  //       .catch((err) => {\n  //         setError(err);\n  //       });\n  //   }, [client]);\n\n  //   if (error) {\n  //     console.error(error);\n  //     return <p>error{error.message}</p>;\n  //   }\n  //   if (!data || !data.recipeSteps) return <p>no steps right now</p>;\n\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"list-decimal list-inside p-4\",\n    children: data.recipeSteps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RecipeStep, {\n        step: step.step,\n        completed: step.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Update, {\n        id: step.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Delete, {\n        id: step.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, step.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeStepList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = RecipeStepList;\nexport default RecipeStepList;\nvar _c;\n$RefreshReg$(_c, \"RecipeStepList\");","map":{"version":3,"names":["React","useEffect","useState","useApolloClient","gql","useQuery","RecipeStep","Delete","Update","jsxDEV","_jsxDEV","GET_RECIPE_STEPS","RecipeStepList","_s","loading","error","data","message","className","children","recipeSteps","map","step","completed","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useApolloClient, gql, useQuery } from \"@apollo/client\";\nimport RecipeStep from \"./RecipeStep\";\nimport Delete from \"./Delete\";\nimport Update from \"./Update\";\nconst GET_RECIPE_STEPS = gql`\n  query AllRecipeSteps {\n    recipeSteps {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nfunction RecipeStepList() {\n  //copied this directly from Apollo docs\n  const { loading, error, data } = useQuery(GET_RECIPE_STEPS); //muchhh easier way to query with apollo client wow\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n  //this was another way to query i tried which just required a bit more code but did the saem thing as above\n  //   const client = useApolloClient();\n  //   const [data, setData] = useState(null);\n  //   const [error, setError] = useState(null);\n\n  //   useEffect(() => {\n  //     client\n  //       .query({\n  //         query: GET_RECIPE_STEPS,\n  //       })\n  //       .then((response) => {\n  //         setData(response.data);\n  //       })\n  //       .catch((err) => {\n  //         setError(err);\n  //       });\n  //   }, [client]);\n\n  //   if (error) {\n  //     console.error(error);\n  //     return <p>error{error.message}</p>;\n  //   }\n  //   if (!data || !data.recipeSteps) return <p>no steps right now</p>;\n\n  return (\n    <ol className=\"list-decimal list-inside p-4\">\n      {data.recipeSteps.map((step) => (\n        <div key={step.id}>\n          <RecipeStep step={step.step} completed={step.completed} />\n          <Update id={step.id} />\n          <Delete id={step.id} />\n        </div>\n      ))}\n    </ol>\n  );\n}\n\nexport default RecipeStepList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC/D,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAMC,gBAAgB,GAAGP,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASQ,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB;EACA,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACM,gBAAgB,CAAC,CAAC,CAAC;EAC7D,IAAIG,OAAO,EAAE,OAAO,YAAY;EAChC,IAAIC,KAAK,EAAE,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAAC;;EAE3C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACEP,OAAA;IAAIQ,SAAS,EAAC,8BAA8B;IAAAC,QAAA,EACzCH,IAAI,CAACI,WAAW,CAACC,GAAG,CAAEC,IAAI,iBACzBZ,OAAA;MAAAS,QAAA,gBACET,OAAA,CAACJ,UAAU;QAACgB,IAAI,EAAEA,IAAI,CAACA,IAAK;QAACC,SAAS,EAAED,IAAI,CAACC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DjB,OAAA,CAACF,MAAM;QAACoB,EAAE,EAAEN,IAAI,CAACM;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvBjB,OAAA,CAACH,MAAM;QAACqB,EAAE,EAAEN,IAAI,CAACM;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAHfL,IAAI,CAACM,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACd,EAAA,CAzCQD,cAAc;EAAA,QAEYP,QAAQ;AAAA;AAAAwB,EAAA,GAFlCjB,cAAc;AA2CvB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
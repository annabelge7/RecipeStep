{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/frontend/src/RecipeStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $completed: Boolean!) {\n    updateRecipeStep(data: { id: $id, completed: $completed }) {\n      id\n      step\n      completed\n    }\n  }\n`;\nexport default function RecipeStep({\n  id,\n  step,\n  completed\n}) {\n  _s();\n  /**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */\n  const [isComplete, setComplete] = useState(completed);\n  const [updateRecipeStep, {\n    loading,\n    error\n  }] = useMutation(UPDATE_RECIPE_STEP, {\n    variables: {\n      id,\n      completed\n    }\n  });\n  const handleCheckbox = async e => {\n    const newComplete = !isComplete;\n    console.log(newComplete);\n    e.preventDefault();\n    setComplete(newComplete);\n    try {\n      const {\n        data\n      } = await updateRecipeStep({\n        variables: {\n          id,\n          step,\n          completed: newComplete\n        },\n        optimisticResponse: {\n          updateRecipeStep: {\n            id: id,\n            step: step,\n            completed: newComplete,\n            __typename: \"RecipeStep\"\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"failed update completed\", error);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  if (loading) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        textDecoration: isComplete ? \"line-through\" : \"none\"\n      },\n      className: \"m-2\",\n      children: step\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isComplete,\n      onChange: handleCheckbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeStep, \"scNy0IiwAK1O0ZQkSYPRCnQDhtw=\", false, function () {\n  return [useMutation];\n});\n_c = RecipeStep;\nvar _c;\n$RefreshReg$(_c, \"RecipeStep\");","map":{"version":3,"names":["React","useState","useMutation","gql","jsxDEV","_jsxDEV","UPDATE_RECIPE_STEP","RecipeStep","id","step","completed","_s","isComplete","setComplete","updateRecipeStep","loading","error","variables","handleCheckbox","e","newComplete","console","log","preventDefault","data","optimisticResponse","__typename","children","message","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","className","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/frontend/src/RecipeStep.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $completed: Boolean!) {\n    updateRecipeStep(data: { id: $id, completed: $completed }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nexport default function RecipeStep({ id, step, completed }) {\n  /**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */\n  const [isComplete, setComplete] = useState(completed);\n  const [updateRecipeStep, { loading, error }] = useMutation(\n    UPDATE_RECIPE_STEP,\n    {\n      variables: { id, completed },\n    }\n  );\n\n  const handleCheckbox = async (e) => {\n    const newComplete = !isComplete;\n    console.log(newComplete);\n    e.preventDefault();\n    setComplete(newComplete);\n\n    try {\n      const { data } = await updateRecipeStep({\n        variables: { id, step, completed: newComplete },\n        optimisticResponse: {\n          updateRecipeStep: {\n            id: id,\n            step: step,\n            completed: newComplete,\n            __typename: \"RecipeStep\",\n          },\n        },\n      });\n    } catch (error) {\n      console.error(\"failed update completed\", error);\n    }\n  };\n\n  if (error) return <p>error: {error.message}</p>;\n  if (loading) return \"Loading...\";\n  return (\n    <li>\n      <label\n        style={{ textDecoration: isComplete ? \"line-through\" : \"none\" }}\n        className=\"m-2\"\n      >\n        {step}\n      </label>\n      <input\n        type=\"checkbox\"\n        checked={isComplete}\n        onChange={handleCheckbox}\n      ></input>\n    </li>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASI,UAAUA,CAAC;EAAEC,EAAE;EAAEC,IAAI;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC1D;AACF;AACA;AACA;AACA;EACE,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACS,SAAS,CAAC;EACrD,MAAM,CAACI,gBAAgB,EAAE;IAAEC,OAAO;IAAEC;EAAM,CAAC,CAAC,GAAGd,WAAW,CACxDI,kBAAkB,EAClB;IACEW,SAAS,EAAE;MAAET,EAAE;MAAEE;IAAU;EAC7B,CACF,CAAC;EAED,MAAMQ,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClC,MAAMC,WAAW,GAAG,CAACR,UAAU;IAC/BS,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACxBD,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBV,WAAW,CAACO,WAAW,CAAC;IAExB,IAAI;MACF,MAAM;QAAEI;MAAK,CAAC,GAAG,MAAMV,gBAAgB,CAAC;QACtCG,SAAS,EAAE;UAAET,EAAE;UAAEC,IAAI;UAAEC,SAAS,EAAEU;QAAY,CAAC;QAC/CK,kBAAkB,EAAE;UAClBX,gBAAgB,EAAE;YAChBN,EAAE,EAAEA,EAAE;YACNC,IAAI,EAAEA,IAAI;YACVC,SAAS,EAAEU,WAAW;YACtBM,UAAU,EAAE;UACd;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,IAAIA,KAAK,EAAE,oBAAOX,OAAA;IAAAsB,QAAA,GAAG,SAAO,EAACX,KAAK,CAACY,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,IAAIjB,OAAO,EAAE,OAAO,YAAY;EAChC,oBACEV,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MACE4B,KAAK,EAAE;QAAEC,cAAc,EAAEtB,UAAU,GAAG,cAAc,GAAG;MAAO,CAAE;MAChEuB,SAAS,EAAC,KAAK;MAAAR,QAAA,EAEdlB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACR3B,OAAA;MACE+B,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEzB,UAAW;MACpB0B,QAAQ,EAAEpB;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAET;AAACrB,EAAA,CAtDuBJ,UAAU;EAAA,QAOeL,WAAW;AAAA;AAAAqC,EAAA,GAPpChC,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useApolloClient, gql, useQuery } from \"@apollo/client\";\nimport RecipeStep from \"./RecipeStep\";\nimport Delete from \"./Delete\";\nimport Update from \"./Update\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_RECIPE_STEPS = gql`\n  query AllRecipeSteps($completed: Boolean) {\n    recipeSteps(completed: $completed) {\n      id\n      step\n      completed\n    }\n  }\n`;\nfunction RecipeStepList() {\n  _s();\n  const [filter, setFilter] = useState(null);\n  //copied this directly from Apollo docs\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RECIPE_STEPS, {\n    variables: {\n      completed: filter\n    },\n    pollInterval: 500\n  }); //muchhh easier way to query with apollo client wow\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-controls\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setFilter(null),\n        text: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setFilter(true),\n        text: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setFilter(false),\n        text: \"Not Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"list-decimal list-inside p-4\",\n      children: data && data.recipeSteps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(RecipeStep, {\n          id: step.id,\n          step: step.step,\n          completed: step.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Update, {\n            id: step.id,\n            startStep: step.step,\n            completed: step.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Delete, {\n            id: step.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeStepList, \"a3mVKA/oFAWSw8aZn7GRkvS0NeU=\", false, function () {\n  return [useQuery];\n});\n_c = RecipeStepList;\nexport default RecipeStepList;\nvar _c;\n$RefreshReg$(_c, \"RecipeStepList\");","map":{"version":3,"names":["React","useEffect","useState","useApolloClient","gql","useQuery","RecipeStep","Delete","Update","Button","jsxDEV","_jsxDEV","GET_RECIPE_STEPS","RecipeStepList","_s","filter","setFilter","loading","error","data","variables","completed","pollInterval","message","children","className","onClick","text","fileName","_jsxFileName","lineNumber","columnNumber","recipeSteps","map","step","id","startStep","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useApolloClient, gql, useQuery } from \"@apollo/client\";\nimport RecipeStep from \"./RecipeStep\";\nimport Delete from \"./Delete\";\nimport Update from \"./Update\";\nimport Button from \"./Button\";\n\nconst GET_RECIPE_STEPS = gql`\n  query AllRecipeSteps($completed: Boolean) {\n    recipeSteps(completed: $completed) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nfunction RecipeStepList() {\n  const [filter, setFilter] = useState(null);\n  //copied this directly from Apollo docs\n  const { loading, error, data } = useQuery(GET_RECIPE_STEPS, {\n    variables: { completed: filter },\n    pollInterval: 500,\n  }); //muchhh easier way to query with apollo client wow\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div>\n      <div className=\"filter-controls\">\n        <Button onClick={() => setFilter(null)} text={\"All\"} />\n        <Button onClick={() => setFilter(true)} text={\"Completed\"} />\n        <Button onClick={() => setFilter(false)} text={\"Not Completed\"} />\n      </div>\n      <ol className=\"list-decimal list-inside p-4\">\n        {data &&\n          data.recipeSteps.map((step) => (\n            <div key={step.id}>\n              <RecipeStep\n                id={step.id}\n                step={step.step}\n                completed={step.completed}\n              />\n              <div className=\"flex\">\n                <Update\n                  id={step.id}\n                  startStep={step.step}\n                  completed={step.completed}\n                />\n                <Delete id={step.id} />\n              </div>\n            </div>\n          ))}\n      </ol>\n    </div>\n  );\n}\n\nexport default RecipeStepList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/Update.js\",\n  _s = $RefreshSig$();\nimport Button from \"./Button\";\nimport React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $step: String!) {\n    updateRecipeStep(data: { id: $id, step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\nexport default function Update({\n  id,\n  startStep\n}) {\n  _s();\n  const [step, setStep] = useState(\"\");\n  // const [input, setInput] = useState(\"\");\n  const [updateRecipeStep, {\n    loading,\n    error\n  }] = useMutation(UPDATE_RECIPE_STEP, {\n    variables: {\n      id\n    }\n  });\n  const handleUpdate = async e => {\n    console.log(e);\n    e.preventDefault();\n    if (!step) return;\n    const {\n      data\n    } = await updateRecipeStep({\n      variables: {\n        id,\n        step\n      },\n      //copied this directly from apollo docs learned about optimistc response\n      optimisticResponse: {\n        updateStep: {\n          id: id,\n          step: step,\n          __typename: \"RecipeStep\"\n        }\n      }\n    });\n    setStep(\"\");\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n  if (loading) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: step,\n      onChange: e => setStep(e.target.value),\n      placeholder: \"Edit Step\",\n      className: \"p-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Update Step\",\n      color: \"lightgreen\",\n      onClick: e => handleUpdate(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"uYmC5f5sV89DpUgBoiGONoK49Bw=\", false, function () {\n  return [useMutation];\n});\n_c = Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["Button","React","useState","RecipeStep","useMutation","gql","jsxDEV","_jsxDEV","UPDATE_RECIPE_STEP","Update","id","startStep","_s","step","setStep","updateRecipeStep","loading","error","variables","handleUpdate","e","console","log","preventDefault","data","optimisticResponse","updateStep","__typename","children","message","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","className","text","color","onClick","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/Update.js"],"sourcesContent":["import Button from \"./Button\";\nimport React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $step: String!) {\n    updateRecipeStep(data: { id: $id, step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nexport default function Update({ id, startStep }) {\n  const [step, setStep] = useState(\"\");\n  // const [input, setInput] = useState(\"\");\n  const [updateRecipeStep, { loading, error }] = useMutation(\n    UPDATE_RECIPE_STEP,\n    {\n      variables: { id },\n    }\n  );\n\n  const handleUpdate = async (e) => {\n    console.log(e);\n    e.preventDefault();\n    if (!step) return;\n\n    const { data } = await updateRecipeStep({\n      variables: { id, step },\n      //copied this directly from apollo docs learned about optimistc response\n      optimisticResponse: {\n        updateStep: {\n          id: id,\n          step: step,\n          __typename: \"RecipeStep\",\n        },\n      },\n    });\n    setStep(\"\");\n  };\n  if (error) return <p>error: {error.message}</p>;\n  if (loading) return \"Loading...\";\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={step}\n        onChange={(e) => setStep(e.target.value)}\n        placeholder=\"Edit Step\"\n        className=\"p-2\"\n      />{\" \"}\n      <Button\n        text=\"Update Step\"\n        color=\"lightgreen\"\n        onClick={(e) => handleUpdate(e)}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASI,MAAMA,CAAC;EAAEC,EAAE;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAM,CAACa,gBAAgB,EAAE;IAAEC,OAAO;IAAEC;EAAM,CAAC,CAAC,GAAGb,WAAW,CACxDI,kBAAkB,EAClB;IACEU,SAAS,EAAE;MAAER;IAAG;EAClB,CACF,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACdA,CAAC,CAACG,cAAc,CAAC,CAAC;IAClB,IAAI,CAACV,IAAI,EAAE;IAEX,MAAM;MAAEW;IAAK,CAAC,GAAG,MAAMT,gBAAgB,CAAC;MACtCG,SAAS,EAAE;QAAER,EAAE;QAAEG;MAAK,CAAC;MACvB;MACAY,kBAAkB,EAAE;QAClBC,UAAU,EAAE;UACVhB,EAAE,EAAEA,EAAE;UACNG,IAAI,EAAEA,IAAI;UACVc,UAAU,EAAE;QACd;MACF;IACF,CAAC,CAAC;IACFb,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACD,IAAIG,KAAK,EAAE,oBAAOV,OAAA;IAAAqB,QAAA,GAAG,SAAO,EAACX,KAAK,CAACY,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,IAAIjB,OAAO,EAAE,OAAO,YAAY;EAChC,oBACET,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,IAAK;MACZuB,QAAQ,EAAGhB,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,WAAW;MACvBC,SAAS,EAAC;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EAAC,GAAG,eACN1B,OAAA,CAACP,MAAM;MACLwC,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAGtB,CAAC,IAAKD,YAAY,CAACC,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CA9CuBH,MAAM;EAAA,QAGmBL,WAAW;AAAA;AAAAuC,EAAA,GAHpClC,MAAM;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
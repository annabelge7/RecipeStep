{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project-2-recipe-step-tracker-v2-annabelge7/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RecipeStep from './RecipeStep';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // Add states for tracking input and recipe steps\n  const [input, setInput] = useState('');\n  const [recipeSteps, setRecipeSteps] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe Step Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          // TODO #1: Prevent default behavior\n          e.preventDefault();\n          const id = `step-${Math.floor(Math.random() * Date.now())}`;\n\n          // TODO #3: Add new recipe step to state\n          const newRecipeSteps = {\n            ...recipeSteps\n          };\n          newRecipeSteps[id] = input;\n          setRecipeSteps({\n            ...recipeSteps,\n            [id]: input\n          });\n\n          // TODO #4: Clear input text\n          setInput('');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipe-step\",\n          children: \"Add task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          id: \"recipe-step\",\n          name: \"step\",\n          rows: \"3\"\n          // TODO #2: Set value to input & add input handler\n          ,\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"add-btn\",\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: Object.entries(recipeSteps).map(([k, v]) => /*#__PURE__*/_jsxDEV(RecipeStep, {\n          stepText: v\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5ZDw1Z9vVIRx1PiQ0Ray2ivvgZw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RecipeStep","jsxDEV","_jsxDEV","App","_s","input","setInput","recipeSteps","setRecipeSteps","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","id","Math","floor","random","Date","now","newRecipeSteps","htmlFor","type","name","rows","value","onChange","target","Object","entries","map","k","v","stepText","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project-2-recipe-step-tracker-v2-annabelge7/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport RecipeStep from './RecipeStep';\nimport './style.css';\n\nexport default function App() {\n  // Add states for tracking input and recipe steps\n  const [input, setInput] = useState('');\n  const [recipeSteps, setRecipeSteps] = useState({});\n\n  return (\n    <div>\n      <header>\n        <h1>Recipe Step Tracker</h1>\n      </header>\n\n      <main>\n        <form\n          onSubmit={(e) => {\n            // TODO #1: Prevent default behavior\n            e.preventDefault();\n\n            const id = `step-${Math.floor(Math.random() * Date.now())}`;\n\n            // TODO #3: Add new recipe step to state\n            const newRecipeSteps = { ...recipeSteps };\n            newRecipeSteps[id] = input;\n\n            setRecipeSteps({\n              ...recipeSteps,\n              [id]: input,\n            });\n\n            // TODO #4: Clear input text\n            setInput('');\n          }}\n        >\n          <label htmlFor=\"recipe-step\">Add task:</label>\n          <textarea\n            type=\"text\"\n            id=\"recipe-step\"\n            name=\"step\"\n            rows=\"3\"\n            // TODO #2: Set value to input & add input handler\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n          <button id=\"add-btn\" type=\"submit\">\n            Add\n          </button>\n        </form>\n\n        <ol>\n          {Object.entries(recipeSteps).map(([k, v]) => (\n            <RecipeStep key={k} stepText={v} />\n          ))}\n        </ol>\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
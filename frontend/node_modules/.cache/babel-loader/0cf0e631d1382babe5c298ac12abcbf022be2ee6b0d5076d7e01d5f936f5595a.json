{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_RECIPE_STEP = gql`\n  mutation AddStep($step: String!) {\n    addRecipeStep(data: { step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\nexport default function RecipeStepForm() {\n  _s();\n  //   document.getElementById(\"recipe-step\").addEventListener(\"input\", function () {\n  //     console.log(this.value);\n  //   });\n\n  const [input, setInput] = useState(\"\"); //sets input\n  const [addRecipeStep, {\n    error\n  }] = useMutation(ADD_RECIPE_STEP); //usemutation is apollo client call\n  console.log(input);\n  const handleSubmit = async e => {\n    //handle submit waits for the event to occur\n    e.preventDefault(); //prevents from reloading\n    if (!input) return; //if input is non return because nothing there\n    const {\n      data\n    } = await addRecipeStep({\n      //awaits the data from add recipe step\n      variables: {\n        step: input\n      } //this is the variable we are referencing above then mutates backend (awaiting) with variable\n    });\n    setInput(\"\"); //once mutated sets input back to none\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"flex flex-col space-y-3 mt-4 p-4 bg-white rounded shadow\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"recipe-step\",\n      className: \"text-sm font-semibold text-darkgreen\",\n      children: \"Add task:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"recipe-step\",\n      name: \"step\",\n      rows: \"3\",\n      className: \"border border-gray p-2 rounded focus:ring-blue-500 focus:border-blue-500\",\n      value: input,\n      onChange: e => setInput(e.target.value) //sets the input as event change\n      ,\n      placeholder: \"Enter New Recipe Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"py-2 px-4 bg-purple text-white rounded hover:bg-lightgreen\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n//   return (\n//     <form\n//       className=\"flex flex-col space-y-3 mt-4 p-4 bg-white rounded shadow\"\n//       onSubmit={(e) => {\n//         e.preventDefault();\n//         const id = `step-${Math.floor(Math.random() * Date.now())}`;\n//         setRecipeSteps({ ...recipeSteps, [id]: input });\n//         setInput(\"\");\n//       }}\n//     >\n//       <label\n//         htmlFor=\"recipe-step\"\n//         className=\"text-sm font-semibold text-darkgreen\"\n//       >\n//         Add task:\n//       </label>\n//       <textarea\n//         id=\"recipe-step\"\n//         name=\"step\"\n//         rows=\"3\"\n//         className=\"border border-gray p-2 rounded focus:ring-blue-500 focus:border-blue-500\"\n//         value={input}\n//         onChange={(e) => setInput(e.target.value)}\n//       ></textarea>\n//       <button\n//         id=\"add-btn\"\n//         type=\"submit\"\n//         className=\"py-2 px-4 bg-blue-500 text-white rounded bg-purple hover:bg-lightgreen\"\n//       >\n//         Add\n//       </button>\n//     </form>\n//   );\n// }\n_s(RecipeStepForm, \"t3HxdSWQpm1wtOFVQOk0FuP5O8s=\", false, function () {\n  return [useMutation];\n});\n_c = RecipeStepForm;\nvar _c;\n$RefreshReg$(_c, \"RecipeStepForm\");","map":{"version":3,"names":["React","useState","RecipeStep","useMutation","gql","jsxDEV","_jsxDEV","ADD_RECIPE_STEP","RecipeStepForm","_s","input","setInput","addRecipeStep","error","console","log","handleSubmit","e","preventDefault","data","variables","step","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","id","name","rows","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst ADD_RECIPE_STEP = gql`\n  mutation AddStep($step: String!) {\n    addRecipeStep(data: { step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nexport default function RecipeStepForm() {\n  //   document.getElementById(\"recipe-step\").addEventListener(\"input\", function () {\n  //     console.log(this.value);\n  //   });\n\n  const [input, setInput] = useState(\"\"); //sets input\n  const [addRecipeStep, { error }] = useMutation(ADD_RECIPE_STEP); //usemutation is apollo client call\n  console.log(input);\n\n  const handleSubmit = async (e) => {\n    //handle submit waits for the event to occur\n    e.preventDefault(); //prevents from reloading\n    if (!input) return; //if input is non return because nothing there\n    const { data } = await addRecipeStep({\n      //awaits the data from add recipe step\n      variables: { step: input }, //this is the variable we are referencing above then mutates backend (awaiting) with variable\n    });\n\n    setInput(\"\"); //once mutated sets input back to none\n  };\n\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <form\n      className=\"flex flex-col space-y-3 mt-4 p-4 bg-white rounded shadow\"\n      onSubmit={handleSubmit}\n    >\n      <label\n        htmlFor=\"recipe-step\"\n        className=\"text-sm font-semibold text-darkgreen\"\n      >\n        Add task:\n      </label>\n      <textarea\n        id=\"recipe-step\"\n        name=\"step\"\n        rows=\"3\"\n        className=\"border border-gray p-2 rounded focus:ring-blue-500 focus:border-blue-500\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)} //sets the input as event change\n        placeholder=\"Enter New Recipe Step\"\n      ></textarea>\n      <button\n        type=\"submit\"\n        className=\"py-2 px-4 bg-purple text-white rounded hover:bg-lightgreen\"\n      >\n        Add\n      </button>\n    </form>\n  );\n}\n\n//   return (\n//     <form\n//       className=\"flex flex-col space-y-3 mt-4 p-4 bg-white rounded shadow\"\n//       onSubmit={(e) => {\n//         e.preventDefault();\n//         const id = `step-${Math.floor(Math.random() * Date.now())}`;\n//         setRecipeSteps({ ...recipeSteps, [id]: input });\n//         setInput(\"\");\n//       }}\n//     >\n//       <label\n//         htmlFor=\"recipe-step\"\n//         className=\"text-sm font-semibold text-darkgreen\"\n//       >\n//         Add task:\n//       </label>\n//       <textarea\n//         id=\"recipe-step\"\n//         name=\"step\"\n//         rows=\"3\"\n//         className=\"border border-gray p-2 rounded focus:ring-blue-500 focus:border-blue-500\"\n//         value={input}\n//         onChange={(e) => setInput(e.target.value)}\n//       ></textarea>\n//       <button\n//         id=\"add-btn\"\n//         type=\"submit\"\n//         className=\"py-2 px-4 bg-blue-500 text-white rounded bg-purple hover:bg-lightgreen\"\n//       >\n//         Add\n//       </button>\n//     </form>\n//   );\n// }\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,eAAe,GAAGH,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASI,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC;EACA;EACA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,aAAa,EAAE;IAAEC;EAAM,CAAC,CAAC,GAAGV,WAAW,CAACI,eAAe,CAAC,CAAC,CAAC;EACjEO,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAElB,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,CAACR,KAAK,EAAE,OAAO,CAAC;IACpB,MAAM;MAAES;IAAK,CAAC,GAAG,MAAMP,aAAa,CAAC;MACnC;MACAQ,SAAS,EAAE;QAAEC,IAAI,EAAEX;MAAM,CAAC,CAAE;IAC9B,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,IAAIE,KAAK,EAAE,oBAAOP,OAAA;IAAAgB,QAAA,GAAG,SAAO,EAACT,KAAK,CAACU,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACErB,OAAA;IACEsB,SAAS,EAAC,0DAA0D;IACpEC,QAAQ,EAAEb,YAAa;IAAAM,QAAA,gBAEvBhB,OAAA;MACEwB,OAAO,EAAC,aAAa;MACrBF,SAAS,EAAC,sCAAsC;MAAAN,QAAA,EACjD;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRrB,OAAA;MACEyB,EAAE,EAAC,aAAa;MAChBC,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,GAAG;MACRL,SAAS,EAAC,0EAA0E;MACpFM,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGlB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAAC;MAAA;MAC3CG,WAAW,EAAC;IAAuB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACZrB,OAAA;MACEgC,IAAI,EAAC,QAAQ;MACbV,SAAS,EAAC,4DAA4D;MAAAN,QAAA,EACvE;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAlB,EAAA,CAtFwBD,cAAc;EAAA,QAMDL,WAAW;AAAA;AAAAoC,EAAA,GANxB/B,cAAc;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
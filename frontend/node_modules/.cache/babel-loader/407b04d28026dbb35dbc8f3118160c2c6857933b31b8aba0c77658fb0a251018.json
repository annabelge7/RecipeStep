{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $step: String!) {\n    updateRecipeStep(data: { id: $id, step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\nexport default function RecipeStep({\n  id,\n  step,\n  completed\n}) {\n  _s();\n  /**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */\n  const [isComplete, setComplete] = useState(completed);\n  const [updateRecipeStep, {\n    loading,\n    error\n  }] = useMutation(UPDATE_RECIPE_STEP, {\n    variables: {\n      id,\n      completed\n    }\n  });\n  const handleCheckbox = () => {\n    setComplete(!isComplete);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        textDecoration: isComplete ? \"line-through\" : \"none\"\n      },\n      className: \"m-2\",\n      children: step\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isComplete,\n      onChange: handleCheckbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeStep, \"scNy0IiwAK1O0ZQkSYPRCnQDhtw=\", true);\n_c = RecipeStep;\nvar _c;\n$RefreshReg$(_c, \"RecipeStep\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UPDATE_RECIPE_STEP","gql","RecipeStep","id","step","completed","_s","isComplete","setComplete","updateRecipeStep","loading","error","useMutation","variables","handleCheckbox","children","style","textDecoration","className","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStep.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $step: String!) {\n    updateRecipeStep(data: { id: $id, step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nexport default function RecipeStep({ id, step, completed }) {\n  /**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */\n  const [isComplete, setComplete] = useState(completed);\n  const [updateRecipeStep, { loading, error }] = useMutation(\n    UPDATE_RECIPE_STEP,\n    {\n      variables: { id, completed },\n    }\n  );\n\n  const handleCheckbox = () => {\n    setComplete(!isComplete);\n  };\n\n  return (\n    <li>\n      <label\n        style={{ textDecoration: isComplete ? \"line-through\" : \"none\" }}\n        className=\"m-2\"\n      >\n        {step}\n      </label>\n      <input\n        type=\"checkbox\"\n        checked={isComplete}\n        onChange={handleCheckbox}\n      ></input>\n    </li>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGC,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASC,UAAUA,CAAC;EAAEC,EAAE;EAAEC,IAAI;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC1D;AACF;AACA;AACA;AACA;EACE,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACQ,SAAS,CAAC;EACrD,MAAM,CAACI,gBAAgB,EAAE;IAAEC,OAAO;IAAEC;EAAM,CAAC,CAAC,GAAGC,WAAW,CACxDZ,kBAAkB,EAClB;IACEa,SAAS,EAAE;MAAEV,EAAE;MAAEE;IAAU;EAC7B,CACF,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BN,WAAW,CAAC,CAACD,UAAU,CAAC;EAC1B,CAAC;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,KAAK,EAAE;QAAEC,cAAc,EAAEV,UAAU,GAAG,cAAc,GAAG;MAAO,CAAE;MAChEW,SAAS,EAAC,KAAK;MAAAH,QAAA,EAEdX;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRvB,OAAA;MACEwB,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEjB,UAAW;MACpBkB,QAAQ,EAAEX;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAET;AAAChB,EAAA,CAjCuBJ,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
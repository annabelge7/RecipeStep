{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeStep({\n  step\n}) {\n  _s();\n  /**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */\n  const [isComplete, setComplete] = useState(step.completed);\n  const handleCheckbox = () => {\n    setComplete(!isComplete);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        textDecoration: isComplete ? \"line-through\" : \"none\"\n      },\n      className: \"m-2\",\n      children: step.step\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isComplete,\n      onChange: handleCheckbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeStep, \"AtjXVuf+sPuPphiNqFaA+TPtOg0=\");\n_c = RecipeStep;\nvar _c;\n$RefreshReg$(_c, \"RecipeStep\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecipeStep","step","_s","isComplete","setComplete","completed","handleCheckbox","children","style","textDecoration","className","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStep.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function RecipeStep({ step }) {\n  /**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */\n  const [isComplete, setComplete] = useState(step.completed);\n\n  const handleCheckbox = () => {\n    setComplete(!isComplete);\n  };\n\n  return (\n    <li>\n      <label\n        style={{ textDecoration: isComplete ? \"line-through\" : \"none\" }}\n        className=\"m-2\"\n      >\n        {step.step}\n      </label>\n      <input\n        type=\"checkbox\"\n        checked={isComplete}\n        onChange={handleCheckbox}\n      ></input>\n    </li>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC3C;AACF;AACA;AACA;AACA;EACE,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAACI,IAAI,CAACI,SAAS,CAAC;EAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BF,WAAW,CAAC,CAACD,UAAU,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAAQ,QAAA,gBACER,OAAA;MACES,KAAK,EAAE;QAAEC,cAAc,EAAEN,UAAU,GAAG,cAAc,GAAG;MAAO,CAAE;MAChEO,SAAS,EAAC,KAAK;MAAAH,QAAA,EAEdN,IAAI,CAACA;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRf,OAAA;MACEgB,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEb,UAAW;MACpBc,QAAQ,EAAEX;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAET;AAACZ,EAAA,CA3BuBF,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
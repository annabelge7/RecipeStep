{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useApolloClient, gql, useQuery } from \"@apollo/client\";\nimport RecipeStep from \"./RecipeStep\";\nimport Delete from \"./Delete\";\nimport Update from \"./Update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_RECIPE_STEPS = gql`\n  query AllRecipeSteps($completed: Boolean) {\n    recipeSteps(completed: $completed) {\n      id\n      step\n      completed\n    }\n  }\n`;\nfunction RecipeStepList() {\n  _s();\n  const [filter, setFilter] = useState(null);\n  //copied this directly from Apollo docs\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RECIPE_STEPS, {\n    variables: {\n      completed: filter\n    },\n    pollInterval: 500\n  }); //muchhh easier way to query with apollo client wow\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"list-decimal list-inside p-4\",\n    children: data.recipeSteps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RecipeStep, {\n        id: step.id,\n        step: step.step,\n        completed: step.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Update, {\n          id: step.id,\n          startStep: step.step,\n          completed: step.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Delete, {\n          id: step.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, step.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeStepList, \"a3mVKA/oFAWSw8aZn7GRkvS0NeU=\", false, function () {\n  return [useQuery];\n});\n_c = RecipeStepList;\nexport default RecipeStepList;\nvar _c;\n$RefreshReg$(_c, \"RecipeStepList\");","map":{"version":3,"names":["React","useEffect","useState","useApolloClient","gql","useQuery","RecipeStep","Delete","Update","jsxDEV","_jsxDEV","GET_RECIPE_STEPS","RecipeStepList","_s","filter","setFilter","loading","error","data","variables","completed","pollInterval","message","className","children","recipeSteps","map","step","id","fileName","_jsxFileName","lineNumber","columnNumber","startStep","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useApolloClient, gql, useQuery } from \"@apollo/client\";\nimport RecipeStep from \"./RecipeStep\";\nimport Delete from \"./Delete\";\nimport Update from \"./Update\";\n\nconst GET_RECIPE_STEPS = gql`\n  query AllRecipeSteps($completed: Boolean) {\n    recipeSteps(completed: $completed) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nfunction RecipeStepList() {\n  const [filter, setFilter] = useState(null);\n  //copied this directly from Apollo docs\n  const { loading, error, data } = useQuery(GET_RECIPE_STEPS, {\n    variables: { completed: filter },\n    pollInterval: 500,\n  }); //muchhh easier way to query with apollo client wow\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <ol className=\"list-decimal list-inside p-4\">\n      {data.recipeSteps.map((step) => (\n        <div key={step.id}>\n          <RecipeStep\n            id={step.id}\n            step={step.step}\n            completed={step.completed}\n          />\n          <div className=\"flex\">\n            <Update\n              id={step.id}\n              startStep={step.step}\n              completed={step.completed}\n            />\n            <Delete id={step.id} />\n          </div>\n        </div>\n      ))}\n    </ol>\n  );\n}\n\nexport default RecipeStepList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC/D,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,gBAAgB,GAAGP,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASQ,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C;EACA,MAAM;IAAEc,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGb,QAAQ,CAACM,gBAAgB,EAAE;IAC1DQ,SAAS,EAAE;MAAEC,SAAS,EAAEN;IAAO,CAAC;IAChCO,YAAY,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC;EACJ,IAAIL,OAAO,EAAE,OAAO,YAAY;EAChC,IAAIC,KAAK,EAAE,OAAQ,UAASA,KAAK,CAACK,OAAQ,EAAC;EAE3C,oBACEZ,OAAA;IAAIa,SAAS,EAAC,8BAA8B;IAAAC,QAAA,EACzCN,IAAI,CAACO,WAAW,CAACC,GAAG,CAAEC,IAAI,iBACzBjB,OAAA;MAAAc,QAAA,gBACEd,OAAA,CAACJ,UAAU;QACTsB,EAAE,EAAED,IAAI,CAACC,EAAG;QACZD,IAAI,EAAEA,IAAI,CAACA,IAAK;QAChBP,SAAS,EAAEO,IAAI,CAACP;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFtB,OAAA;QAAKa,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBd,OAAA,CAACF,MAAM;UACLoB,EAAE,EAAED,IAAI,CAACC,EAAG;UACZK,SAAS,EAAEN,IAAI,CAACA,IAAK;UACrBP,SAAS,EAAEO,IAAI,CAACP;QAAU;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFtB,OAAA,CAACH,MAAM;UAACqB,EAAE,EAAED,IAAI,CAACC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA,GAbEL,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACnB,EAAA,CA/BQD,cAAc;EAAA,QAGYP,QAAQ;AAAA;AAAA6B,EAAA,GAHlCtB,cAAc;AAiCvB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
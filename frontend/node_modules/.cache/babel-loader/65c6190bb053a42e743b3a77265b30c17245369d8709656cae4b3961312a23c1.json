{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState}from\"react\";import{useMutation,gql}from\"@apollo/client\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const UPDATE_RECIPE_STEP=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation UpdateRecipeStep($id: ID!, $completed: Boolean!) {\\n    updateRecipeStep(data: { id: $id, completed: $completed }) {\\n      id\\n      step\\n      completed\\n    }\\n  }\\n\"])));export default function RecipeStep(_ref){let{id,step,completed}=_ref;/**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */const[isComplete,setComplete]=useState(completed);const[updateRecipeStep,{loading,error}]=useMutation(UPDATE_RECIPE_STEP,{variables:{id,completed}});const handleCheckbox=async e=>{const newComplete=!isComplete;console.log(newComplete);e.preventDefault();setComplete(newComplete);try{const{data}=await updateRecipeStep({variables:{id,step,completed:newComplete},optimisticResponse:{updateRecipeStep:{id:id,step:step,completed:newComplete,__typename:\"RecipeStep\"}}});}catch(error){console.error(\"failed update completed\",error);}};if(error)return/*#__PURE__*/_jsxs(\"p\",{children:[\"error: \",error.message]});if(loading)return\"Loading...\";return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{textDecoration:isComplete?\"line-through\":\"none\"},className:\"m-2\",children:step}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isComplete,onChange:handleCheckbox})]});}","map":{"version":3,"names":["React","useState","useMutation","gql","jsxs","_jsxs","jsx","_jsx","UPDATE_RECIPE_STEP","_templateObject","_taggedTemplateLiteral","RecipeStep","_ref","id","step","completed","isComplete","setComplete","updateRecipeStep","loading","error","variables","handleCheckbox","e","newComplete","console","log","preventDefault","data","optimisticResponse","__typename","children","message","style","textDecoration","className","type","checked","onChange"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/frontend/src/RecipeStep.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst UPDATE_RECIPE_STEP = gql`\n  mutation UpdateRecipeStep($id: ID!, $completed: Boolean!) {\n    updateRecipeStep(data: { id: $id, completed: $completed }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n\nexport default function RecipeStep({ id, step, completed }) {\n  /**\n   * TODO #5:\n   * 1. Add state for tracking if step is completed\n   * 2. Update styles based on state\n   */\n  const [isComplete, setComplete] = useState(completed);\n  const [updateRecipeStep, { loading, error }] = useMutation(\n    UPDATE_RECIPE_STEP,\n    {\n      variables: { id, completed },\n    }\n  );\n\n  const handleCheckbox = async (e) => {\n    const newComplete = !isComplete;\n    console.log(newComplete);\n    e.preventDefault();\n    setComplete(newComplete);\n\n    try {\n      const { data } = await updateRecipeStep({\n        variables: { id, step, completed: newComplete },\n        optimisticResponse: {\n          updateRecipeStep: {\n            id: id,\n            step: step,\n            completed: newComplete,\n            __typename: \"RecipeStep\",\n          },\n        },\n      });\n    } catch (error) {\n      console.error(\"failed update completed\", error);\n    }\n  };\n\n  if (error) return <p>error: {error.message}</p>;\n  if (loading) return \"Loading...\";\n  return (\n    <li>\n      <label\n        style={{ textDecoration: isComplete ? \"line-through\" : \"none\" }}\n        className=\"m-2\"\n      >\n        {step}\n      </label>\n      <input\n        type=\"checkbox\"\n        checked={isComplete}\n        onChange={handleCheckbox}\n      ></input>\n    </li>\n  );\n}\n"],"mappings":"+NAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,GAAG,KAAQ,gBAAgB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,kBAAkB,CAAGL,GAAG,CAAAM,eAAA,GAAAA,eAAA,CAAAC,sBAAA,8LAQ7B,CAED,cAAe,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAA0B,IAAzB,CAAEC,EAAE,CAAEC,IAAI,CAAEC,SAAU,CAAC,CAAAH,IAAA,CACxD;AACF;AACA;AACA;AACA,KACE,KAAM,CAACI,UAAU,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAACc,SAAS,CAAC,CACrD,KAAM,CAACG,gBAAgB,CAAE,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAC,CAAGlB,WAAW,CACxDM,kBAAkB,CAClB,CACEa,SAAS,CAAE,CAAER,EAAE,CAAEE,SAAU,CAC7B,CACF,CAAC,CAED,KAAM,CAAAO,cAAc,CAAG,KAAO,CAAAC,CAAC,EAAK,CAClC,KAAM,CAAAC,WAAW,CAAG,CAACR,UAAU,CAC/BS,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CACxBD,CAAC,CAACI,cAAc,CAAC,CAAC,CAClBV,WAAW,CAACO,WAAW,CAAC,CAExB,GAAI,CACF,KAAM,CAAEI,IAAK,CAAC,CAAG,KAAM,CAAAV,gBAAgB,CAAC,CACtCG,SAAS,CAAE,CAAER,EAAE,CAAEC,IAAI,CAAEC,SAAS,CAAES,WAAY,CAAC,CAC/CK,kBAAkB,CAAE,CAClBX,gBAAgB,CAAE,CAChBL,EAAE,CAAEA,EAAE,CACNC,IAAI,CAAEA,IAAI,CACVC,SAAS,CAAES,WAAW,CACtBM,UAAU,CAAE,YACd,CACF,CACF,CAAC,CAAC,CACJ,CAAE,MAAOV,KAAK,CAAE,CACdK,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAED,GAAIA,KAAK,CAAE,mBAAOf,KAAA,MAAA0B,QAAA,EAAG,SAAO,CAACX,KAAK,CAACY,OAAO,EAAI,CAAC,CAC/C,GAAIb,OAAO,CAAE,MAAO,YAAY,CAChC,mBACEd,KAAA,OAAA0B,QAAA,eACExB,IAAA,UACE0B,KAAK,CAAE,CAAEC,cAAc,CAAElB,UAAU,CAAG,cAAc,CAAG,MAAO,CAAE,CAChEmB,SAAS,CAAC,KAAK,CAAAJ,QAAA,CAEdjB,IAAI,CACA,CAAC,cACRP,IAAA,UACE6B,IAAI,CAAC,UAAU,CACfC,OAAO,CAAErB,UAAW,CACpBsB,QAAQ,CAAEhB,cAAe,CACnB,CAAC,EACP,CAAC,CAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
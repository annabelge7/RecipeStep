{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState}from\"react\";import RecipeStep from\"./RecipeStep\";import{useMutation,gql}from\"@apollo/client\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const ADD_RECIPE_STEP=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation AddStep($step: String!) {\\n    addRecipeStep(data: { step: $step }) {\\n      id\\n      step\\n      completed\\n    }\\n  }\\n\"])));// const GET_RECIPE_STEPS = gql`\n//   query AllRecipeSteps {\n//     recipeSteps {\n//       id\n//       step\n//       completed\n//     }\n//   }\n// `;\nexport default function RecipeStepForm(){//   document.getElementById(\"recipe-step\").addEventListener(\"input\", function () {\n//     console.log(this.value);\n//   });\nconst[input,setInput]=useState(\"\");//sets input\nconst[addRecipeStep,{loading,error,data}]=useMutation(ADD_RECIPE_STEP);//I copied this directly from apollo docs and it was fairly easy to do except i\n//then had to rewrite the get_recipe steps query since it is in a differnt component\n//which felt like a waste of code to me\n//     {\n//       update(cache, { data: { addRecipeStep } }) {\n//         const existingSteps = cache.readQuery({ query: GET_RECIPE_STEPS });\n//         if (existingSteps && addRecipeStep) {\n//           cache.writeQuery({\n//             query: GET_RECIPE_STEPS,\n//             data: {\n//               recipeSteps: [...existingSteps.recipeSteps, addRecipeStep],\n//             },\n//           });\n//         }\n//       },\n//     }\n//   ); //usemutation is apollo client call\nconst handleAdd=async e=>{//handle submit waits for the event to occur\ne.preventDefault();//prevents from reloading\nif(!input)return;//if input is non return because nothing there\nconst{data}=await addRecipeStep({//awaits the data from add recipe step\nvariables:{step:input}//this is the variable we are referencing above then mutates backend (awaiting) with variable\n});setInput(\"\");//once mutated sets input back to none\n};if(error)return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error.message]});if(loading)return\"Loading...\";return/*#__PURE__*/_jsxs(\"form\",{className:\"flex flex-col mt-4 p-4 bg-white\",onSubmit:handleAdd,children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm pb-4 text-black\",children:\"Add task:\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"border border-gray p-2 mb-4\",value:input,onChange:e=>setInput(e.target.value)//sets the input as event change\n,placeholder:\"Enter New Recipe Step\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"pt-2 pb-2 pr-4 pl-4 bg-purple text-white hover:bg-lightgreen\",children:\"Add\"})]});}","map":{"version":3,"names":["React","useState","RecipeStep","useMutation","gql","jsxs","_jsxs","jsx","_jsx","ADD_RECIPE_STEP","_templateObject","_taggedTemplateLiteral","RecipeStepForm","input","setInput","addRecipeStep","loading","error","data","handleAdd","e","preventDefault","variables","step","children","message","className","onSubmit","value","onChange","target","placeholder","type"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/frontend/src/RecipeStepForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst ADD_RECIPE_STEP = gql`\n  mutation AddStep($step: String!) {\n    addRecipeStep(data: { step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n// const GET_RECIPE_STEPS = gql`\n//   query AllRecipeSteps {\n//     recipeSteps {\n//       id\n//       step\n//       completed\n//     }\n//   }\n// `;\n\nexport default function RecipeStepForm() {\n  //   document.getElementById(\"recipe-step\").addEventListener(\"input\", function () {\n  //     console.log(this.value);\n  //   });\n\n  const [input, setInput] = useState(\"\"); //sets input\n  const [addRecipeStep, { loading, error, data }] =\n    useMutation(ADD_RECIPE_STEP);\n  //I copied this directly from apollo docs and it was fairly easy to do except i\n  //then had to rewrite the get_recipe steps query since it is in a differnt component\n  //which felt like a waste of code to me\n  //     {\n  //       update(cache, { data: { addRecipeStep } }) {\n  //         const existingSteps = cache.readQuery({ query: GET_RECIPE_STEPS });\n  //         if (existingSteps && addRecipeStep) {\n  //           cache.writeQuery({\n  //             query: GET_RECIPE_STEPS,\n  //             data: {\n  //               recipeSteps: [...existingSteps.recipeSteps, addRecipeStep],\n  //             },\n  //           });\n  //         }\n  //       },\n  //     }\n  //   ); //usemutation is apollo client call\n\n  const handleAdd = async (e) => {\n    //handle submit waits for the event to occur\n    e.preventDefault(); //prevents from reloading\n    if (!input) return; //if input is non return because nothing there\n    const { data } = await addRecipeStep({\n      //awaits the data from add recipe step\n      variables: { step: input }, //this is the variable we are referencing above then mutates backend (awaiting) with variable\n    });\n\n    setInput(\"\"); //once mutated sets input back to none\n  };\n\n  if (error) return <p>Error: {error.message}</p>;\n  if (loading) return \"Loading...\";\n\n  return (\n    <form className=\"flex flex-col mt-4 p-4 bg-white\" onSubmit={handleAdd}>\n      <label className=\"text-sm pb-4 text-black\">Add task:</label>\n      <textarea\n        className=\"border border-gray p-2 mb-4\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)} //sets the input as event change\n        placeholder=\"Enter New Recipe Step\"\n      ></textarea>\n      <button\n        type=\"submit\"\n        className=\"pt-2 pb-2 pr-4 pl-4 bg-purple text-white hover:bg-lightgreen\"\n      >\n        Add\n      </button>\n    </form>\n  );\n}\n"],"mappings":"+NAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,OAASC,WAAW,CAAEC,GAAG,KAAQ,gBAAgB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,eAAe,CAAGL,GAAG,CAAAM,eAAA,GAAAA,eAAA,CAAAC,sBAAA,+IAQ1B,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAe,SAAS,CAAAC,cAAcA,CAAA,CAAG,CACvC;AACA;AACA;AAEA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxC,KAAM,CAACc,aAAa,CAAE,CAAEC,OAAO,CAAEC,KAAK,CAAEC,IAAK,CAAC,CAAC,CAC7Cf,WAAW,CAACM,eAAe,CAAC,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAU,SAAS,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC7B;AACAA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAE;AACpB,GAAI,CAACR,KAAK,CAAE,OAAQ;AACpB,KAAM,CAAEK,IAAK,CAAC,CAAG,KAAM,CAAAH,aAAa,CAAC,CACnC;AACAO,SAAS,CAAE,CAAEC,IAAI,CAAEV,KAAM,CAAG;AAC9B,CAAC,CAAC,CAEFC,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChB,CAAC,CAED,GAAIG,KAAK,CAAE,mBAAOX,KAAA,MAAAkB,QAAA,EAAG,SAAO,CAACP,KAAK,CAACQ,OAAO,EAAI,CAAC,CAC/C,GAAIT,OAAO,CAAE,MAAO,YAAY,CAEhC,mBACEV,KAAA,SAAMoB,SAAS,CAAC,iCAAiC,CAACC,QAAQ,CAAER,SAAU,CAAAK,QAAA,eACpEhB,IAAA,UAAOkB,SAAS,CAAC,yBAAyB,CAAAF,QAAA,CAAC,WAAS,CAAO,CAAC,cAC5DhB,IAAA,aACEkB,SAAS,CAAC,6BAA6B,CACvCE,KAAK,CAAEf,KAAM,CACbgB,QAAQ,CAAGT,CAAC,EAAKN,QAAQ,CAACM,CAAC,CAACU,MAAM,CAACF,KAAK,CAAG;AAAA,CAC3CG,WAAW,CAAC,uBAAuB,CAC1B,CAAC,cACZvB,IAAA,WACEwB,IAAI,CAAC,QAAQ,CACbN,SAAS,CAAC,8DAA8D,CAAAF,QAAA,CACzE,KAED,CAAQ,CAAC,EACL,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
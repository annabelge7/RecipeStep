{"ast":null,"code":"var _jsxFileName = \"/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_RECIPE_STEP = gql`\n  mutation AddStep($step: String!) {\n    addRecipeStep(data: { step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n// const GET_RECIPE_STEPS = gql`\n//   query AllRecipeSteps {\n//     recipeSteps {\n//       id\n//       step\n//       completed\n//     }\n//   }\n// `;\n\nexport default function RecipeStepForm() {\n  _s();\n  //   document.getElementById(\"recipe-step\").addEventListener(\"input\", function () {\n  //     console.log(this.value);\n  //   });\n\n  const [input, setInput] = useState(\"\"); //sets input\n  const [addRecipeStep, {\n    loading,\n    error,\n    data\n  }] = useMutation(ADD_RECIPE_STEP);\n  //I copied this directly from apollo docs and it was fairly easy to do except i\n  //then had to rewrite the get_recipe steps query since it is in a differnt component\n  //which felt like a waste of code to me\n  //     {\n  //       update(cache, { data: { addRecipeStep } }) {\n  //         const existingSteps = cache.readQuery({ query: GET_RECIPE_STEPS });\n  //         if (existingSteps && addRecipeStep) {\n  //           cache.writeQuery({\n  //             query: GET_RECIPE_STEPS,\n  //             data: {\n  //               recipeSteps: [...existingSteps.recipeSteps, addRecipeStep],\n  //             },\n  //           });\n  //         }\n  //       },\n  //     }\n  //   ); //usemutation is apollo client call\n\n  const handleAdd = async e => {\n    //handle submit waits for the event to occur\n    e.preventDefault(); //prevents from reloading\n    if (!input) return; //if input is non return because nothing there\n    const {\n      data\n    } = await addRecipeStep({\n      //awaits the data from add recipe step\n      variables: {\n        step: input\n      } //this is the variable we are referencing above then mutates backend (awaiting) with variable\n    });\n    setInput(\"\"); //once mutated sets input back to none\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n  if (loading) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"flex flex-col space-y-3 mt-4 p-4 bg-white\",\n    onSubmit: handleAdd,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"recipe-step\",\n      className: \"text-sm font-semibold text-darkgreen\",\n      children: \"Add task:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"recipe-step\",\n      name: \"step\",\n      rows: \"3\",\n      className: \"border border-gray p-2\",\n      value: input,\n      onChange: e => setInput(e.target.value) //sets the input as event change\n      ,\n      placeholder: \"Enter New Recipe Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"py-2 px-4 bg-purple text-white rounded hover:bg-lightgreen\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeStepForm, \"xxbfw8l28MNtFmuZBMGDFT1+/dY=\", false, function () {\n  return [useMutation];\n});\n_c = RecipeStepForm;\nvar _c;\n$RefreshReg$(_c, \"RecipeStepForm\");","map":{"version":3,"names":["React","useState","RecipeStep","useMutation","gql","jsxDEV","_jsxDEV","ADD_RECIPE_STEP","RecipeStepForm","_s","input","setInput","addRecipeStep","loading","error","data","handleAdd","e","preventDefault","variables","step","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","id","name","rows","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/annabeledwards/Desktop/FullStack/project2/project-2-recipe-step-tracker-v2-annabelge7/src/RecipeStepForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport RecipeStep from \"./RecipeStep\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst ADD_RECIPE_STEP = gql`\n  mutation AddStep($step: String!) {\n    addRecipeStep(data: { step: $step }) {\n      id\n      step\n      completed\n    }\n  }\n`;\n// const GET_RECIPE_STEPS = gql`\n//   query AllRecipeSteps {\n//     recipeSteps {\n//       id\n//       step\n//       completed\n//     }\n//   }\n// `;\n\nexport default function RecipeStepForm() {\n  //   document.getElementById(\"recipe-step\").addEventListener(\"input\", function () {\n  //     console.log(this.value);\n  //   });\n\n  const [input, setInput] = useState(\"\"); //sets input\n  const [addRecipeStep, { loading, error, data }] =\n    useMutation(ADD_RECIPE_STEP);\n  //I copied this directly from apollo docs and it was fairly easy to do except i\n  //then had to rewrite the get_recipe steps query since it is in a differnt component\n  //which felt like a waste of code to me\n  //     {\n  //       update(cache, { data: { addRecipeStep } }) {\n  //         const existingSteps = cache.readQuery({ query: GET_RECIPE_STEPS });\n  //         if (existingSteps && addRecipeStep) {\n  //           cache.writeQuery({\n  //             query: GET_RECIPE_STEPS,\n  //             data: {\n  //               recipeSteps: [...existingSteps.recipeSteps, addRecipeStep],\n  //             },\n  //           });\n  //         }\n  //       },\n  //     }\n  //   ); //usemutation is apollo client call\n\n  const handleAdd = async (e) => {\n    //handle submit waits for the event to occur\n    e.preventDefault(); //prevents from reloading\n    if (!input) return; //if input is non return because nothing there\n    const { data } = await addRecipeStep({\n      //awaits the data from add recipe step\n      variables: { step: input }, //this is the variable we are referencing above then mutates backend (awaiting) with variable\n    });\n\n    setInput(\"\"); //once mutated sets input back to none\n  };\n\n  if (error) return <p>Error: {error.message}</p>;\n  if (loading) return \"Loading...\";\n\n  return (\n    <form\n      className=\"flex flex-col space-y-3 mt-4 p-4 bg-white\"\n      onSubmit={handleAdd}\n    >\n      <label\n        htmlFor=\"recipe-step\"\n        className=\"text-sm font-semibold text-darkgreen\"\n      >\n        Add task:\n      </label>\n      <textarea\n        id=\"recipe-step\"\n        name=\"step\"\n        rows=\"3\"\n        className=\"border border-gray p-2\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)} //sets the input as event change\n        placeholder=\"Enter New Recipe Step\"\n      ></textarea>\n      <button\n        type=\"submit\"\n        className=\"py-2 px-4 bg-purple text-white rounded hover:bg-lightgreen\"\n      >\n        Add\n      </button>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,eAAe,GAAGH,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASI,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC;EACA;EACA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,aAAa,EAAE;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,CAAC,GAC7CZ,WAAW,CAACI,eAAe,CAAC;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMS,SAAS,GAAG,MAAOC,CAAC,IAAK;IAC7B;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,CAACR,KAAK,EAAE,OAAO,CAAC;IACpB,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMH,aAAa,CAAC;MACnC;MACAO,SAAS,EAAE;QAAEC,IAAI,EAAEV;MAAM,CAAC,CAAE;IAC9B,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,IAAIG,KAAK,EAAE,oBAAOR,OAAA;IAAAe,QAAA,GAAG,SAAO,EAACP,KAAK,CAACQ,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,IAAIb,OAAO,EAAE,OAAO,YAAY;EAEhC,oBACEP,OAAA;IACEqB,SAAS,EAAC,2CAA2C;IACrDC,QAAQ,EAAEZ,SAAU;IAAAK,QAAA,gBAEpBf,OAAA;MACEuB,OAAO,EAAC,aAAa;MACrBF,SAAS,EAAC,sCAAsC;MAAAN,QAAA,EACjD;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRpB,OAAA;MACEwB,EAAE,EAAC,aAAa;MAChBC,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,GAAG;MACRL,SAAS,EAAC,wBAAwB;MAClCM,KAAK,EAAEvB,KAAM;MACbwB,QAAQ,EAAGjB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAAC;MAAA;MAC3CG,WAAW,EAAC;IAAuB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACZpB,OAAA;MACE+B,IAAI,EAAC,QAAQ;MACbV,SAAS,EAAC,4DAA4D;MAAAN,QAAA,EACvE;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACjB,EAAA,CArEuBD,cAAc;EAAA,QAOlCL,WAAW;AAAA;AAAAmC,EAAA,GAPS9B,cAAc;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}